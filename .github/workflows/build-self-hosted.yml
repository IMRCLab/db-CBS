name: Build

# Only trigger if manually requested
on: [workflow_dispatch]
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted


    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    # - name: Install system dependencies
    #   run: sudo apt update  && sudo apt install libboost-all-dev libfcl-dev cmake libeigen3-dev libyaml-cpp-dev liblz4-dev -y

    # - name: install crocoddyl
    #   run: |
    #     sudo tee /etc/apt/sources.list.d/robotpkg.list << EOF
    #     deb [arch=amd64] http://robotpkg.openrobots.org/packages/debian/pub $(lsb_release -sc) robotpkg
    #     EOF

    #     curl http://robotpkg.openrobots.org/packages/debian/robotpkg.key | sudo apt-key add -
    #     sudo apt update
    #     sudo apt install robotpkg-py310-crocoddyl -y

    # - name: Install latest ompl
    #   run: |
    #     mkdir __local
    #     git clone https://github.com/ompl/ompl
    #     cd ompl && mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX=~/__local  && make install -j8

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH="~/__local;/opt/openrobots/"

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}} --rerun-failed --output-on-failure
